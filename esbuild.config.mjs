import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === "production");

// Define a plugin to copy the manifest.json file
const copyManifestPlugin = {
	name: "copy-manifest",
	setup(build) {
	  build.onEnd(() => {
		fs.copyFileSync("manifest.json", "dist/manifest.json");
		console.log("manifest.json copied to dist folder.");
		fs.copyFileSync("styles.css", "dist/styles.css");
		console.log("styles.css copied to dist folder.");
		fs.copyFileSync("versions.json", "dist/versions.json");
		console.log("versions.json copied to dist folder.");
	  });
	},
  };

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dist/main.js",
	minify: prod,
	plugins: [copyManifestPlugin],
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}